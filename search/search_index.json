{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Obsidian is a Markdown-based note-taking and knowledge base app. We currently support the formats below: Internal linking \u00b6 Link to a page: [[Internal link]]. Link to a page: index . Embeds \u00b6 Embed another file (read more about Embed files ). Here\u2019s an embedded section: ![[Obsidian#What is Obsidian]] Headers \u00b6 # This is a heading 1 ## This is a heading 2 ### This is a heading 3 #### This is a heading 4 ##### This is a heading 5 ###### This is a heading 6 This is a heading 1 \u00b6 This is a heading 2 \u00b6 This is a heading 3 \u00b6 This is a heading 4 \u00b6 This is a heading 5 \u00b6 This is a heading 6 \u00b6 Emphasis \u00b6 *This text will be italic* _This will also be italic_ This text will be italic This will also be italic **This text will be bold** __This will also be bold__ This text will be bold This will also be bold _You **can** combine them_ You can combine them Lists \u00b6 - Item 1 - Item 2 - Item 2a - Item 2b 1. Item 1 1. Item 2 1. Item 3 1. Item 3a 1. Item 3b Item 1 Item 2 Item 2a Item 2b Item 1 Item 2 Item 3 Item 3a Item 3b Images \u00b6 ![ Engelbart ]( https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg ) Resizing images \u00b6 Example of this above image resized to 100 pixels wide: ![ Engelbart|100 ]( https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg ) Links \u00b6 External links \u00b6 Markdown style links can be used to refer to either external objects, such as web pages, or an internal page or image. http://obsidian.md - automatic! [ Obsidian ]( http://obsidian.md ) http://obsidian.md - automatic! Obsidian Obsidian URI links \u00b6 Obsidian URI links can be used to open notes in Obsidian either from another Obsidian vault or another program. For example, you can link to a file in a vault like so (please note the required encoding ): [ Link to note ]( obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md ) Link to note You can link to a note by its vault name and file name instead of path as well: [ Link to note ]( obsidian://open?vault=MainVault&file=MyNote.md ) Link to note Escaping \u00b6 If there are spaces in the url, they can be escaped by either using %20 as a space, such as: [ Export options ]( Pasted%20image ) Export options Or you can enclose the target in <> , such as: [ Slides Demo ]( <Slides Demo> ) Slides Demo Blockquotes \u00b6 > Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society. \\- Doug Engelbart, 1961 Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society. - Doug Engelbart, 1961 Inline code \u00b6 Text inside `backticks` on a line will be formatted like code. Text inside backticks on a line will be formatted like code. Code blocks \u00b6 Syntax highlight is supported with the language specified after the first set of backticks. We use prismjs for syntax highlighting, a list of supported languages can be found at their site ```js function fancyAlert(arg) { if(arg) { $.facebox({div:'#foo'}) } } ``` function fancyAlert ( arg ) { if ( arg ) { $ . facebox ({ div : '#foo' }) } } Text indented with a tab is formatted like this, and will also look like a code block in preview. Text indented with a tab is formatted like this, and will also look like a code block in preview. Task list \u00b6 - [x] #tags , [links](), **formatting** supported - [x] list syntax required (any unordered or ordered list supported) - [x] this is a complete item - [?] this is also a complete item (works with every character) - [ ] this is an incomplete item - [ ] tasks can be clicked in Preview to be checked off #tags, links , formatting supported list syntax required (any unordered or ordered list supported) this is a complete item [?] this is also a complete item (works with every character) this is an incomplete item tasks can be clicked in Preview to be checked off Tables \u00b6 You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe | : First Header | Second Header ------------ | ------------ Content from cell 1 | Content from cell 2 Content in the first column | Content in the second column First Header Second Header Content from cell 1 Content from cell 2 Content in the first column Content in the second column Tables can be justified with a colon | Another example with a long title :----------------|-------------: because of the `:` | these will be justified If you put links in tables, they will work, but if you use Piped Links, the pipe must be escaped with a `\\` to prevent it being read as a table element. Tables can be justified with a colon Another example with a long title because of the : these will be justified If you put links in tables, they will work, but if you use Piped Links, the pipe must be escaped with a \\ to prevent it being read as a table element. First Header | Second Header ------------ | ------------ [[Format your notes\\|Formatting]] | [[Keyboard shortcuts\\|hotkeys]] First Header Second Header Formatting hotkeys Strikethrough \u00b6 Any word wrapped with two tildes (like ~~this~~ ) will appear crossed out. Any word wrapped with two tildes (like this ) will appear crossed out. Highlighting \u00b6 Use two equal signs to ==highlight text==. Use two equal signs to highlight text . Footnotes \u00b6 Here's a simple footnote,[^1] and here's a longer one.[^bignote] [ ^1 ]: meaningful! [ ^bignote ]: Here's one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. `{ my code }` Add as many paragraphs as you like. Here\u2019s a simple footnote, 1 and here\u2019s a longer one. 2 You can also use inline footnotes. ^[notice that the carat goes outside of the brackets on this one.] You can also use inline footnotes. ^[notice that the carat goes outside of the brackets on this one.] Math \u00b6 $$\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc$$ \\[\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc\\] You can also do inline math like \\(e^{2i\\pi} = 1\\) . Obsidian uses Mathjax . You can check which packages are supported in Mathjax here . Comments \u00b6 Use %% to enclose comments, which will be parsed as Markdown, but will not show up in the preview. Here is some inline comments: %%You can't see this text%% (Can't see it) Here is a block comment: %% It can span multiple lines %% Here is some inline comments: %%You can\u2019t see this text%% (can\u2019t see it in preview) Here is a block comment: (can\u2019t see it in preview either) %% It can span multiple lines %% Diagram \u00b6 Obsidian uses Mermaid to render diagrams and charts. Mermaid also provides a helpful live editor . ```mermaid sequenceDiagram Alice->>+John: Hello John, how are you? Alice->>+John: John, can you hear me? John-->>-Alice: Hi Alice, I can hear you! John-->>-Alice: I feel great! ``` sequenceDiagram Alice->>+John: Hello John, how are you? Alice->>+John: John, can you hear me? John-->>-Alice: Hi Alice, I can hear you! John-->>-Alice: I feel great! Obsidian supports linking to notes in Mermaid: ```mermaid graph TD Biology --> Chemistry class Biology,Chemistry internal-link; ``` An easier way to do it is the following: ^376b9d ```mermaid graph TD A[Biology] B[Chemistry] A --> B class A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z internal-link; ``` This way, all the note names (at least until Z[note name] ) are all automatically assigned the class internal-link when you use this snippet. If you use special characters in your note names, you need to put the note name in double quotes. \"\u2a33 special character\" It looks like this if you follow the second option : A[\"\u2a33 special character\"] Developer notes \u00b6 We strive for maximum capability without breaking any existing formats, therefore we use a slightly unorthodox combination of flavors of markdown. It is broadly CommonMark, with the addition of some functionality from GitHub Flavored Markdown (GFM), some latex support, and our chosen embed syntax, which you can read more about at Accepted file formats . meaningful! \u21a9 Here\u2019s one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. { my code } Add as many paragraphs as you like. \u21a9","title":"Home"},{"location":"#internal-linking","text":"Link to a page: [[Internal link]]. Link to a page: index .","title":"Internal linking"},{"location":"#embeds","text":"Embed another file (read more about Embed files ). Here\u2019s an embedded section: ![[Obsidian#What is Obsidian]]","title":"Embeds"},{"location":"#headers","text":"# This is a heading 1 ## This is a heading 2 ### This is a heading 3 #### This is a heading 4 ##### This is a heading 5 ###### This is a heading 6","title":"Headers"},{"location":"#this-is-a-heading-1","text":"","title":"This is a heading 1"},{"location":"#this-is-a-heading-2","text":"","title":"This is a heading 2"},{"location":"#this-is-a-heading-3","text":"","title":"This is a heading 3"},{"location":"#this-is-a-heading-4","text":"","title":"This is a heading 4"},{"location":"#this-is-a-heading-5","text":"","title":"This is a heading 5"},{"location":"#this-is-a-heading-6","text":"","title":"This is a heading 6"},{"location":"#emphasis","text":"*This text will be italic* _This will also be italic_ This text will be italic This will also be italic **This text will be bold** __This will also be bold__ This text will be bold This will also be bold _You **can** combine them_ You can combine them","title":"Emphasis"},{"location":"#lists","text":"- Item 1 - Item 2 - Item 2a - Item 2b 1. Item 1 1. Item 2 1. Item 3 1. Item 3a 1. Item 3b Item 1 Item 2 Item 2a Item 2b Item 1 Item 2 Item 3 Item 3a Item 3b","title":"Lists"},{"location":"#images","text":"![ Engelbart ]( https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg )","title":"Images"},{"location":"#resizing-images","text":"Example of this above image resized to 100 pixels wide: ![ Engelbart|100 ]( https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg )","title":"Resizing images"},{"location":"#links","text":"","title":"Links"},{"location":"#external-links","text":"Markdown style links can be used to refer to either external objects, such as web pages, or an internal page or image. http://obsidian.md - automatic! [ Obsidian ]( http://obsidian.md ) http://obsidian.md - automatic! Obsidian","title":"External links"},{"location":"#obsidian-uri-links","text":"Obsidian URI links can be used to open notes in Obsidian either from another Obsidian vault or another program. For example, you can link to a file in a vault like so (please note the required encoding ): [ Link to note ]( obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md ) Link to note You can link to a note by its vault name and file name instead of path as well: [ Link to note ]( obsidian://open?vault=MainVault&file=MyNote.md ) Link to note","title":"Obsidian URI links"},{"location":"#escaping","text":"If there are spaces in the url, they can be escaped by either using %20 as a space, such as: [ Export options ]( Pasted%20image ) Export options Or you can enclose the target in <> , such as: [ Slides Demo ]( <Slides Demo> ) Slides Demo","title":"Escaping"},{"location":"#blockquotes","text":"> Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society. \\- Doug Engelbart, 1961 Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society. - Doug Engelbart, 1961","title":"Blockquotes"},{"location":"#inline-code","text":"Text inside `backticks` on a line will be formatted like code. Text inside backticks on a line will be formatted like code.","title":"Inline code"},{"location":"#code-blocks","text":"Syntax highlight is supported with the language specified after the first set of backticks. We use prismjs for syntax highlighting, a list of supported languages can be found at their site ```js function fancyAlert(arg) { if(arg) { $.facebox({div:'#foo'}) } } ``` function fancyAlert ( arg ) { if ( arg ) { $ . facebox ({ div : '#foo' }) } } Text indented with a tab is formatted like this, and will also look like a code block in preview. Text indented with a tab is formatted like this, and will also look like a code block in preview.","title":"Code blocks"},{"location":"#task-list","text":"- [x] #tags , [links](), **formatting** supported - [x] list syntax required (any unordered or ordered list supported) - [x] this is a complete item - [?] this is also a complete item (works with every character) - [ ] this is an incomplete item - [ ] tasks can be clicked in Preview to be checked off #tags, links , formatting supported list syntax required (any unordered or ordered list supported) this is a complete item [?] this is also a complete item (works with every character) this is an incomplete item tasks can be clicked in Preview to be checked off","title":"Task list"},{"location":"#tables","text":"You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe | : First Header | Second Header ------------ | ------------ Content from cell 1 | Content from cell 2 Content in the first column | Content in the second column First Header Second Header Content from cell 1 Content from cell 2 Content in the first column Content in the second column Tables can be justified with a colon | Another example with a long title :----------------|-------------: because of the `:` | these will be justified If you put links in tables, they will work, but if you use Piped Links, the pipe must be escaped with a `\\` to prevent it being read as a table element. Tables can be justified with a colon Another example with a long title because of the : these will be justified If you put links in tables, they will work, but if you use Piped Links, the pipe must be escaped with a \\ to prevent it being read as a table element. First Header | Second Header ------------ | ------------ [[Format your notes\\|Formatting]] | [[Keyboard shortcuts\\|hotkeys]] First Header Second Header Formatting hotkeys","title":"Tables"},{"location":"#strikethrough","text":"Any word wrapped with two tildes (like ~~this~~ ) will appear crossed out. Any word wrapped with two tildes (like this ) will appear crossed out.","title":"Strikethrough"},{"location":"#highlighting","text":"Use two equal signs to ==highlight text==. Use two equal signs to highlight text .","title":"Highlighting"},{"location":"#footnotes","text":"Here's a simple footnote,[^1] and here's a longer one.[^bignote] [ ^1 ]: meaningful! [ ^bignote ]: Here's one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. `{ my code }` Add as many paragraphs as you like. Here\u2019s a simple footnote, 1 and here\u2019s a longer one. 2 You can also use inline footnotes. ^[notice that the carat goes outside of the brackets on this one.] You can also use inline footnotes. ^[notice that the carat goes outside of the brackets on this one.]","title":"Footnotes"},{"location":"#math","text":"$$\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc$$ \\[\\begin{vmatrix}a & b\\\\ c & d \\end{vmatrix}=ad-bc\\] You can also do inline math like \\(e^{2i\\pi} = 1\\) . Obsidian uses Mathjax . You can check which packages are supported in Mathjax here .","title":"Math"},{"location":"#comments","text":"Use %% to enclose comments, which will be parsed as Markdown, but will not show up in the preview. Here is some inline comments: %%You can't see this text%% (Can't see it) Here is a block comment: %% It can span multiple lines %% Here is some inline comments: %%You can\u2019t see this text%% (can\u2019t see it in preview) Here is a block comment: (can\u2019t see it in preview either) %% It can span multiple lines %%","title":"Comments"},{"location":"#diagram","text":"Obsidian uses Mermaid to render diagrams and charts. Mermaid also provides a helpful live editor . ```mermaid sequenceDiagram Alice->>+John: Hello John, how are you? Alice->>+John: John, can you hear me? John-->>-Alice: Hi Alice, I can hear you! John-->>-Alice: I feel great! ``` sequenceDiagram Alice->>+John: Hello John, how are you? Alice->>+John: John, can you hear me? John-->>-Alice: Hi Alice, I can hear you! John-->>-Alice: I feel great! Obsidian supports linking to notes in Mermaid: ```mermaid graph TD Biology --> Chemistry class Biology,Chemistry internal-link; ``` An easier way to do it is the following: ^376b9d ```mermaid graph TD A[Biology] B[Chemistry] A --> B class A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z internal-link; ``` This way, all the note names (at least until Z[note name] ) are all automatically assigned the class internal-link when you use this snippet. If you use special characters in your note names, you need to put the note name in double quotes. \"\u2a33 special character\" It looks like this if you follow the second option : A[\"\u2a33 special character\"]","title":"Diagram"},{"location":"#developer-notes","text":"We strive for maximum capability without breaking any existing formats, therefore we use a slightly unorthodox combination of flavors of markdown. It is broadly CommonMark, with the addition of some functionality from GitHub Flavored Markdown (GFM), some latex support, and our chosen embed syntax, which you can read more about at Accepted file formats . meaningful! \u21a9 Here\u2019s one with multiple paragraphs and code. Indent paragraphs to include them in the footnote. { my code } Add as many paragraphs as you like. \u21a9","title":"Developer notes"},{"location":"hidden/Flux/","text":"Github Watch Kustomization \u00b6 flux get kustomizations --watch Installation \u00b6 brew install flux Bootstrap Examples \u00b6 Prod server Home OPS \u00b6 flux bootstrap github \\ --context = default \\ --owner = ankit16-19 \\ --repository = home-ops \\ --branch = main \\ --path = ./flux/clusters/prod \\ --personal Dev Server Home OPS \u00b6 flux bootstrap github \\ --context = test \\ --owner = ankit16-19 \\ --repository = home-ops \\ --branch = test \\ --path = ./flux/clusters/dev \\ --personal Multicluster setup in one repo \u00b6 Deploying multiple cluster using single repositories, Use cases could be: Deployed on different env with different params, token, api keys, resources. Branching Strategy \u00b6 Keeping multiple branches to track changes, i.e keeping all cluster under cluster folder. i.e Home OPS repo structure --repo-root ---clusters ----prod ----dev Here we have two cluster bootstrapped using Flux. Flux . These servers can keep Kustomization to include other source folder ie. apps, core, crds. To override params based on different env \u00b6 We can use different root folders but this will lead to lot of duplicated code, Alternatively we can make use of Flux feature. Home Ops repo Example Following above keeping track of similar config in different env will also result in lot of code duplication, We can take advantage of the fact that Flux applies config based on the latest value, so if we keep all them in incremental order ie. base-config first and env config later. This will save us from repeated configs. Overriding expired Deploy token. \u00b6 adding --token-auth=[[Github#Github token]] to bootstrap command will override the tokens.","title":"Flux"},{"location":"hidden/Flux/#watch-kustomization","text":"flux get kustomizations --watch","title":"Watch Kustomization"},{"location":"hidden/Flux/#installation","text":"brew install flux","title":"Installation"},{"location":"hidden/Flux/#bootstrap-examples","text":"","title":"Bootstrap Examples"},{"location":"hidden/Flux/#prod-server-home-ops","text":"flux bootstrap github \\ --context = default \\ --owner = ankit16-19 \\ --repository = home-ops \\ --branch = main \\ --path = ./flux/clusters/prod \\ --personal","title":"Prod server Home OPS"},{"location":"hidden/Flux/#dev-server-home-ops","text":"flux bootstrap github \\ --context = test \\ --owner = ankit16-19 \\ --repository = home-ops \\ --branch = test \\ --path = ./flux/clusters/dev \\ --personal","title":"Dev Server  Home OPS"},{"location":"hidden/Flux/#multicluster-setup-in-one-repo","text":"Deploying multiple cluster using single repositories, Use cases could be: Deployed on different env with different params, token, api keys, resources.","title":"Multicluster setup in one repo"},{"location":"hidden/Flux/#branching-strategy","text":"Keeping multiple branches to track changes, i.e keeping all cluster under cluster folder. i.e Home OPS repo structure --repo-root ---clusters ----prod ----dev Here we have two cluster bootstrapped using Flux. Flux . These servers can keep Kustomization to include other source folder ie. apps, core, crds.","title":"Branching Strategy"},{"location":"hidden/Flux/#to-override-params-based-on-different-env","text":"We can use different root folders but this will lead to lot of duplicated code, Alternatively we can make use of Flux feature. Home Ops repo Example Following above keeping track of similar config in different env will also result in lot of code duplication, We can take advantage of the fact that Flux applies config based on the latest value, so if we keep all them in incremental order ie. base-config first and env config later. This will save us from repeated configs.","title":"To override params based on different env"},{"location":"hidden/Flux/#overriding-expired-deploy-token","text":"adding --token-auth=[[Github#Github token]] to bootstrap command will override the tokens.","title":"Overriding expired Deploy token."},{"location":"home%20ops/","text":"Back Projects MOC Context \u00b6 WIP. Define what Home OPS is. TODO: Home Ops TODO \u00b6 Dependencies \u00b6 Rancher : To create and mange k8s clusters Flux : To manage GitOps Longhorn : To manage volume and backups NAS : To store all the data and backups. Server Setup \u00b6 Github token: Github \u00b6 Prod server: Flux Dev server: Flux Save age keys: SOPS Setup sops: SOPS Flux \u00b6 Install: Flux Watch: Flux Bootstrap: Flux Rancher \u00b6 Install: Rancher Token: Rancher Uninstall: Rancher ISSUES \u00b6 K8s \u00b6 Stuck in Termination: k8s Longhorn \u00b6 Volume Stuck: Longhorn","title":"Index"},{"location":"home%20ops/#context","text":"WIP. Define what Home OPS is.","title":"Context"},{"location":"home%20ops/#todo-home-ops-todo","text":"","title":"TODO: Home Ops TODO"},{"location":"home%20ops/#dependencies","text":"Rancher : To create and mange k8s clusters Flux : To manage GitOps Longhorn : To manage volume and backups NAS : To store all the data and backups.","title":"Dependencies"},{"location":"home%20ops/#server-setup","text":"","title":"Server Setup"},{"location":"home%20ops/#github-token-github","text":"Prod server: Flux Dev server: Flux Save age keys: SOPS Setup sops: SOPS","title":"Github token: Github"},{"location":"home%20ops/#flux","text":"Install: Flux Watch: Flux Bootstrap: Flux","title":"Flux"},{"location":"home%20ops/#rancher","text":"Install: Rancher Token: Rancher Uninstall: Rancher","title":"Rancher"},{"location":"home%20ops/#issues","text":"","title":"ISSUES"},{"location":"home%20ops/#k8s","text":"Stuck in Termination: k8s","title":"K8s"},{"location":"home%20ops/#longhorn","text":"Volume Stuck: Longhorn","title":"Longhorn"},{"location":"home%20ops/Flux/","text":"Github Watch Kustomization \u00b6 flux get kustomizations --watch Installation \u00b6 brew install flux Bootstrap Examples \u00b6 Prod server Home OPS \u00b6 flux bootstrap github \\ --context = default \\ --owner = ankit16-19 \\ --repository = home-ops \\ --branch = main \\ --path = ./flux/clusters/prod \\ --personal Dev Server Home OPS \u00b6 flux bootstrap github \\ --context = test \\ --owner = ankit16-19 \\ --repository = home-ops \\ --branch = test \\ --path = ./flux/clusters/dev \\ --personal Multicluster setup in one repo \u00b6 Deploying multiple cluster using single repositories, Use cases could be: Deployed on different env with different params, token, api keys, resources. Branching Strategy \u00b6 Keeping multiple branches to track changes, i.e keeping all cluster under cluster folder. i.e Home OPS repo structure --repo-root ---clusters ----prod ----dev Here we have two cluster bootstrapped using Flux. Flux . These servers can keep Kustomization to include other source folder ie. apps, core, crds. To override params based on different env \u00b6 We can use different root folders but this will lead to lot of duplicated code, Alternatively we can make use of Flux feature. Home Ops repo Example Following above keeping track of similar config in different env will also result in lot of code duplication, We can take advantage of the fact that Flux applies config based on the latest value, so if we keep all them in incremental order ie. base-config first and env config later. This will save us from repeated configs.","title":"Flux"},{"location":"home%20ops/Flux/#watch-kustomization","text":"flux get kustomizations --watch","title":"Watch Kustomization"},{"location":"home%20ops/Flux/#installation","text":"brew install flux","title":"Installation"},{"location":"home%20ops/Flux/#bootstrap-examples","text":"","title":"Bootstrap Examples"},{"location":"home%20ops/Flux/#prod-server-home-ops","text":"flux bootstrap github \\ --context = default \\ --owner = ankit16-19 \\ --repository = home-ops \\ --branch = main \\ --path = ./flux/clusters/prod \\ --personal","title":"Prod server Home OPS"},{"location":"home%20ops/Flux/#dev-server-home-ops","text":"flux bootstrap github \\ --context = test \\ --owner = ankit16-19 \\ --repository = home-ops \\ --branch = test \\ --path = ./flux/clusters/dev \\ --personal","title":"Dev Server  Home OPS"},{"location":"home%20ops/Flux/#multicluster-setup-in-one-repo","text":"Deploying multiple cluster using single repositories, Use cases could be: Deployed on different env with different params, token, api keys, resources.","title":"Multicluster setup in one repo"},{"location":"home%20ops/Flux/#branching-strategy","text":"Keeping multiple branches to track changes, i.e keeping all cluster under cluster folder. i.e Home OPS repo structure --repo-root ---clusters ----prod ----dev Here we have two cluster bootstrapped using Flux. Flux . These servers can keep Kustomization to include other source folder ie. apps, core, crds.","title":"Branching Strategy"},{"location":"home%20ops/Flux/#to-override-params-based-on-different-env","text":"We can use different root folders but this will lead to lot of duplicated code, Alternatively we can make use of Flux feature. Home Ops repo Example Following above keeping track of similar config in different env will also result in lot of code duplication, We can take advantage of the fact that Flux applies config based on the latest value, so if we keep all them in incremental order ie. base-config first and env config later. This will save us from repeated configs.","title":"To override params based on different env"},{"location":"home%20ops/Home%20Ops%20TODO/","text":"Project TODOS MOC PROJECT: Home OPS TODOs \u00b6 Core \u00b6 Setup Pre-Commit Public Secretes using SOPS Multi server setup Flux Setup Clusters Flux Setup cert-manger to manage certificates Volumes and backups Longhorn Solution for automatic restore on initial setup. Ansible \u00b6 Fix multipath Longhorn Setup Flux keys SOPS Setup Flux Flux Teraform \u00b6 Cloudflare Proxmox Media \u00b6 Sonarr Apps Dashboard Logger Radarr Apps Dashboard Logger Sabnzbd App Dashboard Logger Plex App Logger Bazzar App Logger Ombi App Logger APPS \u00b6 Monitoring \u00b6 Grafana Loki","title":"Home Ops TODO"},{"location":"home%20ops/Home%20Ops%20TODO/#todos","text":"","title":"TODOs"},{"location":"home%20ops/Home%20Ops%20TODO/#core","text":"Setup Pre-Commit Public Secretes using SOPS Multi server setup Flux Setup Clusters Flux Setup cert-manger to manage certificates Volumes and backups Longhorn Solution for automatic restore on initial setup.","title":"Core"},{"location":"home%20ops/Home%20Ops%20TODO/#ansible","text":"Fix multipath Longhorn Setup Flux keys SOPS Setup Flux Flux","title":"Ansible"},{"location":"home%20ops/Home%20Ops%20TODO/#teraform","text":"Cloudflare Proxmox","title":"Teraform"},{"location":"home%20ops/Home%20Ops%20TODO/#media","text":"Sonarr Apps Dashboard Logger Radarr Apps Dashboard Logger Sabnzbd App Dashboard Logger Plex App Logger Bazzar App Logger Ombi App Logger","title":"Media"},{"location":"home%20ops/Home%20Ops%20TODO/#apps","text":"","title":"APPS"},{"location":"home%20ops/Home%20Ops%20TODO/#monitoring","text":"Grafana Loki","title":"Monitoring"},{"location":"home%20ops/Longhorn/","text":"Multipath mount issue \u00b6 Sometimes Host System just latches on the mount and doesn\u2019t let longhorn to mount volumes. Reference Fix: Linux","title":"Longhorn"},{"location":"home%20ops/Longhorn/#multipath-mount-issue","text":"Sometimes Host System just latches on the mount and doesn\u2019t let longhorn to mount volumes. Reference Fix: Linux","title":"Multipath mount issue"},{"location":"home%20ops/Rancher/","text":"Home OPS Install Rancher Without Traefik \u00b6 export INSTALL_K3S_EXEC = \"server --no-deploy traefik\" curl -sfL https://get.k3s.io | sh -s - See k8s token \u00b6 cat /etc/rancher/k3s/k3s.yaml Uninstall \u00b6 /usr/local/bin/k3s-uninstall.sh","title":"Rancher"},{"location":"home%20ops/Rancher/#install-rancher-without-traefik","text":"export INSTALL_K3S_EXEC = \"server --no-deploy traefik\" curl -sfL https://get.k3s.io | sh -s -","title":"Install Rancher Without Traefik"},{"location":"home%20ops/Rancher/#see-k8s-token","text":"cat /etc/rancher/k3s/k3s.yaml","title":"See k8s token"},{"location":"home%20ops/Rancher/#uninstall","text":"/usr/local/bin/k3s-uninstall.sh","title":"Uninstall"},{"location":"home%20ops/k8s/","text":"Patch Finalizer \u00b6 if something is stuck in Termination state forever, you can remove the finalizers to help in RIP. kubectl patch --type-- --name-- -p '{\"metadata\":{\"finalizers\":null}}' --type = merge","title":"K8s"},{"location":"home%20ops/k8s/#patch-finalizer","text":"if something is stuck in Termination state forever, you can remove the finalizers to help in RIP. kubectl patch --type-- --name-- -p '{\"metadata\":{\"finalizers\":null}}' --type = merge","title":"Patch Finalizer"},{"location":"notes/","text":"A link to note3","title":"Index"},{"location":"notes/Pre-Commit/","text":"Website Installation \u00b6 brea install pre-commit # in git repo pre-commit install Running All Files \u00b6 pre-commit run --all-files pre-commit Home OPS config \u00b6 --- fail_fast : false repos : - repo : https://github.com/adrienverge/yamllint rev : v1.26.3 hooks : - args : - --config-file - .github/linters/.yamllint.yaml id : yamllint - repo : https://github.com/pre-commit/pre-commit-hooks rev : v4.1.0 hooks : - id : trailing-whitespace - id : end-of-file-fixer - id : mixed-line-ending - repo : https://github.com/Lucas-C/pre-commit-hooks rev : v1.1.10 hooks : - id : remove-crlf - id : remove-tabs - repo : https://github.com/sirosen/fix-smartquotes rev : 0.2.0 hooks : - id : fix-smartquotes - repo : https://github.com/k8s-at-home/sops-pre-commit rev : v2.1.0 hooks : - id : forbid-secrets - repo : https://github.com/zricethezav/gitleaks rev : v8.2.7 hooks : - id : gitleaks","title":"Pre Commit"},{"location":"notes/Pre-Commit/#installation","text":"brea install pre-commit # in git repo pre-commit install","title":"Installation"},{"location":"notes/Pre-Commit/#running-all-files","text":"pre-commit run --all-files","title":"Running All Files"},{"location":"notes/Pre-Commit/#pre-commit-home-ops-config","text":"--- fail_fast : false repos : - repo : https://github.com/adrienverge/yamllint rev : v1.26.3 hooks : - args : - --config-file - .github/linters/.yamllint.yaml id : yamllint - repo : https://github.com/pre-commit/pre-commit-hooks rev : v4.1.0 hooks : - id : trailing-whitespace - id : end-of-file-fixer - id : mixed-line-ending - repo : https://github.com/Lucas-C/pre-commit-hooks rev : v1.1.10 hooks : - id : remove-crlf - id : remove-tabs - repo : https://github.com/sirosen/fix-smartquotes rev : 0.2.0 hooks : - id : fix-smartquotes - repo : https://github.com/k8s-at-home/sops-pre-commit rev : v2.1.0 hooks : - id : forbid-secrets - repo : https://github.com/zricethezav/gitleaks rev : v8.2.7 hooks : - id : gitleaks","title":"pre-commit Home OPS config"}]}